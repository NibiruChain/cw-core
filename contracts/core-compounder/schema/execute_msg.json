{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "Enum respresenting message types for the execute entry point. These express the different ways in which one can invoke the contract and broadcast tx messages against it.",
  "oneOf": [
    {
      "description": "SetAutocompounderMode allows to set the autocompounder mode. If it's set to true, managers will be able to stake tokens, otherwise they won't be able to do so.",
      "type": "object",
      "required": [
        "set_autocompounder_mode"
      ],
      "properties": {
        "set_autocompounder_mode": {
          "type": "object",
          "required": [
            "autocompounder_mode"
          ],
          "properties": {
            "autocompounder_mode": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Withdraw allows to withdraw a given amount of tokens from the contract. The Withdraw message defines the tokens amount and the recipient address",
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "type": "object",
          "required": [
            "amount",
            "recipient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "recipient": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Unstake allows to unstake a given amount of tokens from a set of validators. The UnstakeMsgs defines the tokens amount and address of the validator.",
      "type": "object",
      "required": [
        "unstake"
      ],
      "properties": {
        "unstake": {
          "type": "object",
          "required": [
            "unstake_msgs"
          ],
          "properties": {
            "unstake_msgs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnstakeMsg"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "UpdateManagers allows to update the list of managers.",
      "type": "object",
      "required": [
        "update_managers"
      ],
      "properties": {
        "update_managers": {
          "type": "object",
          "required": [
            "managers"
          ],
          "properties": {
            "managers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Manager functions Stake allows to stake a given amount of tokens to a set of validators. The StakeMsgs defines the share of tokens distributed and the validator to which the stake is made.",
      "type": "object",
      "required": [
        "stake"
      ],
      "properties": {
        "stake": {
          "type": "object",
          "required": [
            "amount",
            "stake_msgs"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "stake_msgs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StakeMsg"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "StakeMsg": {
      "type": "object",
      "required": [
        "share",
        "validator"
      ],
      "properties": {
        "share": {
          "$ref": "#/definitions/Uint128"
        },
        "validator": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UnstakeMsg": {
      "type": "object",
      "required": [
        "amount",
        "validator"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "validator": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
