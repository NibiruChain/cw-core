{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "Enum respresenting message types for the execute entry point. These express the different ways in which one can invoke the contract and broadcast tx messages against it.",
  "oneOf": [
    {
      "description": "A creator operation that registers a vesting account address: String: Bech 32 address of the owner of the vesting account. vesting_schedule: VestingSchedule: The vesting schedule of the account.",
      "type": "object",
      "required": [
        "reward_users"
      ],
      "properties": {
        "reward_users": {
          "type": "object",
          "required": [
            "rewards",
            "vesting_schedule"
          ],
          "properties": {
            "rewards": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RewardUserRequest"
              }
            },
            "vesting_schedule": {
              "$ref": "#/definitions/VestingSchedule"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "A creator operation that unregisters a vesting account. Args: - address: String: Bech 32 address of the owner of vesting account. - denom: Denom: The denomination of the tokens vested. - vested_token_recipient: Option<String>: Bech 32 address that will receive the vested tokens after deregistration. If None, tokens are received by the owner address. - left_vesting_token_recipient: Option<String>: Bech 32 address that will receive the left vesting tokens after deregistration.",
      "type": "object",
      "required": [
        "deregister_vesting_account"
      ],
      "properties": {
        "deregister_vesting_account": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "left_vesting_token_recipient": {
              "type": [
                "string",
                "null"
              ]
            },
            "vested_token_recipient": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Claim is an operation that allows one to claim vested tokens.",
      "type": "object",
      "required": [
        "claim"
      ],
      "properties": {
        "claim": {
          "type": "object",
          "properties": {
            "recipient": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "type": "object",
          "required": [
            "amount",
            "recipient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "recipient": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "RewardUserRequest": {
      "type": "object",
      "required": [
        "user_address",
        "vesting_amount"
      ],
      "properties": {
        "cliff_amount": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "user_address": {
          "type": "string"
        },
        "vesting_amount": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "VestingSchedule": {
      "oneOf": [
        {
          "description": "LinearVesting is used to vest tokens linearly during a time period. The total_amount will be vested during this period.",
          "type": "object",
          "required": [
            "linear_vesting"
          ],
          "properties": {
            "linear_vesting": {
              "type": "object",
              "required": [
                "end_time",
                "start_time",
                "vesting_amount"
              ],
              "properties": {
                "end_time": {
                  "$ref": "#/definitions/Uint64"
                },
                "start_time": {
                  "$ref": "#/definitions/Uint64"
                },
                "vesting_amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "linear_vesting_with_cliff"
          ],
          "properties": {
            "linear_vesting_with_cliff": {
              "type": "object",
              "required": [
                "cliff_amount",
                "cliff_time",
                "end_time",
                "start_time",
                "vesting_amount"
              ],
              "properties": {
                "cliff_amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "cliff_time": {
                  "$ref": "#/definitions/Uint64"
                },
                "end_time": {
                  "$ref": "#/definitions/Uint64"
                },
                "start_time": {
                  "$ref": "#/definitions/Uint64"
                },
                "vesting_amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
